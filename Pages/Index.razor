@page "/"
@using System.Timers

<div class="container">
    <Toast />

    <div class="title">
        <h2>IncrementalSheep</h2>
        <div class="topbar-buttons">
            <a href="#" @onclick="SaveGame">Save game</a>
            <a href="#" @onclick="LoadGame">Load game</a>
        </div>
    </div>

    <div class="sidebar">
        @foreach (var resource in Engine.State.Resources.AllResources)
        {
            <div><p>@resource.Key: @resource.Value.FormatAsMoney()</p></div>
        }
    </div>

    <div class="branches">
        <BranchButton Branch=@Branch.Population Text="Sheep management" />
        <BranchButton Branch=@Branch.Buildings Text="Camp" />
    </div>

    <div class="buildings">
        @if (Engine.State.SelectedBranch == Branch.Population)
        {
            @foreach (var sheep in Engine.State.Sheep)
            {
                <SheepButton Sheep=@sheep />
            }
        }
        @if (Engine.State.SelectedBranch == Branch.Buildings)
        {
            @foreach (var building in Engine.State.Buildings)
            {
                <BuildingButton Building=@building />
            }
        }
    </div>

    <div class="details">
        <BuildingDetails Building=@Engine.State.SelectedBuilding />
    </div>
</div>

@code {
    [Inject] protected GameEngine Engine { get; set; }
    [Inject] private IToastService ToastService { get; set; }
    protected Timer gameTimer;
    protected Timer autoSaveTimer;

    protected override void OnInitialized()
    {
        gameTimer = new Timer
        {
            Interval = 50
        };
        gameTimer.Elapsed += LoopStep;
        gameTimer.Start();

        autoSaveTimer = new Timer {
            Interval = 30_000
        };
        autoSaveTimer.Elapsed += AutoSave;
        autoSaveTimer.Start();

        // this doesn't do anything if there is no saved game data
        LoadGame();
    }

    private void LoopStep(object? sender, ElapsedEventArgs e)
    {
        Engine.ProcessTime(e.SignalTime);
        this.StateHasChanged();
    }

    private async void AutoSave(object? sender, ElapsedEventArgs e)
    {
        await this.SaveGame();
        ToastService.ShowToast("Game saved!");
    }

    private async Task SaveGame()
    {
        await Engine.SaveGame();
        ToastService.ShowToast("Game manually saved");
    }

    private async Task LoadGame()
    {
        var serializedState = await Engine.GetSavedGameString();
        if (serializedState is not null)
        {
            Engine.LoadGame(serializedState);
            ToastService.ShowToast("Game loaded");
        }
    }
}
