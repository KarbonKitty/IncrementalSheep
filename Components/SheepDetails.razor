@using IncrementalSheep.Components.ResourceComponents

<h2>@(Sheep?.Name ?? "Please select a sheep")</h2>

<p>@Sheep?.Job.Name</p>

@if (Sheep is not null) {
    <p>@Sheep.Job.Description</p>

    @if (Sheep.JobState.Locked)
    {
        <p><strong>Currently working, can't be reassigned</strong></p>
    }

    <ResourceList Header="Production per second" Resources=@Sheep.Job.ProductionPerSecond.Total() />

    <hr />

    <h4>Job change:</h4>

    <select @bind="selectedJobId">
        @foreach (var job in Engine.State.Jobs.Where(j => !j.IsLocked))
        {
            <option value=@job.Id>@job.Name</option>
        }
    </select>

    @if (SelectedJob is not null) {
        <p>@SelectedJob.Description</p>

        <ResourceList
            Header="Production per second"
            Resources=@SelectedJob.ProductionPerSecond.Total() />

        @if (SelectedJob.GetPrice is not null) {
            <ResourceList
                Header=@($"{SelectedJob.Name} training cost")
                Resources=@SelectedJob.GetPrice(Engine.State) />
        }

        <button class="btn" @onclick="@(() => Engine.SwitchJobs(Sheep, SelectedJob))">
            Become @SelectedJob.Name
        </button>
    }
}

@code {
    [Inject] protected GameEngine Engine { get; set; } = default!;
    [Parameter] public Sheep? Sheep { get; set; }

    private GameObjectId selectedJobId;
    private SheepJob? SelectedJob
        => Engine.State.Jobs.SingleOrDefault(j => j.Id == selectedJobId);
}
