@using IncrementalSheep.Components.ResourceComponents

<h2>@(Sheep?.Name ?? "Please select a sheep")</h2>

<p>@Sheep?.Job.Name</p>

@if (Sheep is not null) {
    <p>@Sheep.Job.Description</p>

    @if (Sheep.JobState.Locked)
    {
        <p><strong>Currently working, can't be reassigned</strong></p>
    }

    <ResourceList Header="Production per second" Resources=@Sheep.Job.ProductionPerSecond />

    <select @bind="selectedJobId">
        @foreach (var job in Engine.State.Jobs)
        {
            <option value=@job.Id>@job.Name</option>
        }
    </select>

    @if (SelectedJob is not null) {
        @if (SelectedJob.Price is not null) {
            <ResourceList Header=@($"{SelectedJob.Name} training cost") Resources=@SelectedJob.Price />
        }

        <div class="selectButton" @onclick="@(() => Engine.SwitchJobs(Sheep, SelectedJob))">
            <p>Become @SelectedJob.Name</p>
        </div>
    }
}

@code {
    [Inject] protected GameEngine Engine { get; set; } = default!;
    [Parameter] public Sheep? Sheep { get; set; }

    private SheepJobId selectedJobId;
    private SheepJob? SelectedJob
        => Engine.State.Jobs.SingleOrDefault(j => j.Id == selectedJobId);
}
